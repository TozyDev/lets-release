name: Let's Release
description: ðŸš€ Let's release as soon as possible
author: TozyDev
branding:
  color: green
  icon: tag

inputs:
  version-format:
    description: |
      The format of the version to release.
      There are available placeholders:
        - major
        - minor
        - patch
        - YYYY
        - YY
        - 0Y
        - MM
        - 0M
        - WW
        - 0W
        - DD
        - 0D

    required: false
    default: major.minor.patch

outputs:
  release-type:
    description: The type of release (none, patch, minor, major)
    value: ${{ steps.get-release-type.outputs.type }}

  next-version:
    description: The next version to release
    value: ${{ steps.get-next-version.outputs.version }}

  release-notes:
    description: The release notes, written in Markdown
    value: ${{ steps.generate-release-notes.outputs.notes }}

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - id: get-release-type
      shell: bash
      run: echo "type=$("$GITHUB_ACTION_PATH"/scripts/get-release-type.sh)" >> $GITHUB_OUTPUT

    - id: get-next-version
      if: ${{ steps.get-release-type.outputs.type != 'none' }}
      shell: bash
      run: echo "version=$("$GITHUB_ACTION_PATH"/scripts/get-next-version.sh "$RELEASE_TYPE" "$VERSION_FORMAT")" >> $GITHUB_OUTPUT
      env:
        RELEASE_TYPE: ${{ steps.get-release-type.outputs.type }}
        VERSION_FORMAT: ${{ inputs.version-format }}

    - id: generate-release-notes
      if: ${{ steps.get-release-type.outputs.type != 'none' }}
      shell: bash
      run: echo "notes=$("$GITHUB_ACTION_PATH"/scripts/generate-release-notes.sh)" >> $GITHUB_OUTPUT
